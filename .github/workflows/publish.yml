name: Build, Release and Publish

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

# Add permissions configuration
permissions:
  contents: write
  packages: write

jobs:
  build-release-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Extract Version from Tag
        if: startsWith(github.ref, 'refs/tags/v')
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          
      - name: Update Module Version
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          pwsh -Command "./scripts/Update-ManifestVersion.ps1 -ManifestPath ./snowUtils/snowUtils.psd1 -NewVersion ${{ env.VERSION }}"

          # Update csproj file version
          pwsh -Command "
          [xml]\$csproj = Get-Content ./snowUtils/snowUtils.csproj
          \$propertyGroup = \$csproj.Project.PropertyGroup
          if (\$propertyGroup.Version) {
              \$propertyGroup.Version = '${{ env.VERSION }}'
          } else {
              \$versionElement = \$csproj.CreateElement('Version')
              \$versionElement.InnerText = '${{ env.VERSION }}'
              \$propertyGroup.AppendChild(\$versionElement)
          }
          \$csproj.Save('./snowUtils/snowUtils.csproj')
          "

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore -c Release
        
      - name: Pack
        run: dotnet pack --no-build -c Release
        
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v3
        with:
          config: cliff.toml
          args: --verbose
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ env.VERSION }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          body_path: CHANGELOG.md
          generate_release_notes: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Packages
        run: |
          dotnet nuget push "./snowUtils/bin/Release/*.nupkg" --source "github" --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}